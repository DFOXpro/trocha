{"version":3,"sources":["trocha_library.es6.js"],"names":["parent","_throwError","scope","error_text","value","TrochaError","ERROR_HEADER","Error","_throwWarning","warning_text","console","warn","WARNING_HEADER","s","_","DS","OPTIONS","GET","HEAD","POST","PUT","PATCH","DELETE","TRACE","CONNECT","ROUTE","SCOPE","_RESOURCE","_ALIAS","COLON","BRACKETS","_ID_MODE_REPLACE","_PREID","_AVAILABLE_ID_MODES","_FORMAT_ID_FUN","currentIdMode","idName","template","replace","ID","URL","NAME","HIDE","TYPE","PREFIX","ALIAS","QUERY","POSTFIX","EXTENDED","METHOD","DOMAIN","ROUTES","ID_MODE","JUST_ID","FRAGMENT","RESOURCE","PARENT_ID","DEFAULT_ID","ALWAYS_URL","ALWAYS_POST","CUSTOM_SELECTOR","AS","PATH","_show","_edit","_new","_list","_basicResource","SS","r","ERROR_ROUTE_ALREADY_DEFINE","ERROR_SCOPE_AS_A_ROUTE","WARNING_RESOURCE_AS_A_ROUTE","WARNING_ROUTE_ATTRIBUTE_NOT_SUPPORTED","Route","myParent","argRouteDef","argCustomSelector","argRoot","argChildRoutes","argDomain","argAlwaysUrl","argPre","argPost","argAlwaysPost","argIdMode","childs","alwaysPost","alwaysUrl","idMode","domain","post","pre","mySelf","id","attribute","fun","skipSelector","Object","defineProperty","get","enumerable","configurable","posibleRouteDef","_setAndDisposeAttribute","routeDefinition","name","routeSubclasses","Alias","Resource","Scope","forEach","routeSubclass","is","diggest","routeTypes","undefined","newRoute","root","skipResource","resourceChilds","posibleChildRoutesNames","keys","length","posibleChild","pop","scopedChild","args","_setRootAttribute","routeParams","customNameFun","myData","rootData","_formatID","parentPathArg","hide","customNameFromInhered","myId","noIdentifier","query","JSON","parse","stringify","fragment","key","i","array","Array","isArray","_i","encodeURIComponent","IS","dest","attributes","DEFAULT_METHOD","_trimSelector","src","slice","useID","constructor","force","Trocha"],"mappings":"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","sourcesContent":["/** @license trocha@0.2.1 - 2019-04-10\n* Trocha.js \n* \n* This source code is licensed under the Mozillas Public license 2.0 found in the \n* LICENSE file in the root directory of this source tree. \n*/\n/**\n * This file is intended for non module enviorements\n * Works like JQuery or legacy angular\n * Note the parent can be within a clousure or be self(window or worker)\n */\n;(parent => {\n/* Begin: src/v2/_core.js */\n\t// Utility methods\n/* Begin: src/v2/_utils.js */\n\tlet _throwError = (scope, error_text, value) => {\n\t\tclass TrochaError extends Error {\n\t\t\tconstructor(scope, error_text, value) {\n\t\t\t\t// Pass remaining arguments (including vendor specific ones) to parent constructor\n\t\t\t\tsuper(ERROR_HEADER + error_text)\n\n\t\t\t\t// Custom debugging information\n\t\t\t\tthis.scope = scope\n\t\t\t\tthis.value = value\n\t\t\t}\n\t\t}\n\t\tthrow new TrochaError(scope, error_text, value)\n\t}\n\n\tlet _throwWarning = (scope, warning_text, value) => {\n\t\tconsole.warn(WARNING_HEADER + warning_text, value || s, scope || s)\n\t}\n/* End: src/v2/_utils.js */\n\t// Const used abroad the library\n/* Begin: src/v2/_variables.js */\n\t/*\n\t * Why variables are outside the Trocha class?\n\t * Because protected attributes are still not supported\n\t * and because Route share a lot of symbols with Trocha\n\t */\n\n\t/// Utility vars\n\tconst s = '' // Force string\n\tconst _ = '/'\n\tconst DS = '$' // DEFAULT_SELECTOR\n\n\t/// Request method types\n\tconst OPTIONS = 'OPTIONS'\n\tconst GET = 'GET'\n\tconst HEAD = 'HEAD'\n\tconst POST = 'POST'\n\tconst PUT = 'PUT'\n\tconst PATCH = 'PATCH'\n\tconst DELETE = 'DELETE'\n\tconst TRACE = 'TRACE'\n\tconst CONNECT = 'CONNECT'\n\n\t/// Route types\n\tconst ROUTE = 'ROUTE'\n\tconst SCOPE = 'SCOPE'\n\tconst _RESOURCE = 'RESOURCE'\n\tconst _ALIAS = 'ALIAS'\n\n\t/// ID modes\n\t/**\n\t * Standard definition of Id; used in Angular, React(Router)\n\t * Symbol for \"/:the_id\" id mode, default ID mode\n\t * @Public via Trocha\n\t */\n\tconst COLON = 'COLON'\n\t/**\n\t * Definition of Id used in CanJS and other frameworks\n\t * Symbol for \"/{the_id}\" id mode\n\t * @Public via Trocha\n\t */\n\tconst BRACKETS = 'BRACKETS'\n\n\t// Next const are private helpers for ID modes\n\tconst _ID_MODE_REPLACE = 'Ñ' // Can be any rare character\n\tconst _PREID = _ + _ID_MODE_REPLACE\n\tconst _AVAILABLE_ID_MODES = {} // In teory only used in _FORMAT_ID_FUN\n\t_AVAILABLE_ID_MODES[BRACKETS] = `{${_ID_MODE_REPLACE}}`\n\t_AVAILABLE_ID_MODES[COLON] = `:${_ID_MODE_REPLACE}`\n\n\t/**\n\t * Interpolator of id mode to be used in path function\n\t * @todo should be Route protected(private & inheritable) method\n\t * @param {string} currentIdMode - can be BRACKETS | COLON\n\t * @second_order\n\t * @pure\n\t * @return {function} see function below\n\t */\n\tconst _FORMAT_ID_FUN = currentIdMode =>\n\t\t/**\n\t\t * Interpolate template with _AVAILABLE_ID_MODES[currentIdMode] and idName\n\t\t * @param {string} idName\n\t\t * @param {template literal | string} template - should contain _ID_MODE_REPLACE value; default _ID_MODE_REPLACE\n\t\t * @lambda\n\t\t * @pure false - depends on currentIdMode, _AVAILABLE_ID_MODES and _ID_MODE_REPLACE\n\t\t * @example λ('zxc',`asd${_ID_MODE_REPLACE}qwe`) will return 'asd:zxcqwe' or 'asd{zxc}qwe'\n\t\t * @return {string}\n\t\t */\n\t\t(idName, template = _ID_MODE_REPLACE) =>\n\t\t\ttemplate.replace(\n\t\t\t\t_ID_MODE_REPLACE,\n\t\t\t\t_AVAILABLE_ID_MODES[currentIdMode].replace(_ID_MODE_REPLACE, idName)\n\t\t\t)\n\n\t/// Input attributes\n\tconst ID = 'id'\n\tconst URL = 'url'\n\tconst NAME = 'name'\n\tconst HIDE = 'hide'\n\tconst TYPE = 'type'\n\tconst PREFIX = 'pre'\n\tconst ALIAS = 'alias'\n\tconst QUERY = 'query'\n\tconst POSTFIX = 'post'\n\tconst EXTENDED = 'ext'\n\tconst METHOD = 'method'\n\tconst DOMAIN = 'domain'\n\tconst ROUTES = 'routes'\n\tconst ID_MODE = 'idMode'\n\tconst JUST_ID = 'justId'\n\t// const AFTER_ID = 'afterId' // FAILS & no DOCS\n\tconst FRAGMENT = 'fragment'\n\tconst RESOURCE = 'resource'\n\tconst PARENT_ID = 'parentId'\n\tconst DEFAULT_ID = `defaultId`\n\tconst ALWAYS_URL = 'alwaysUrl'\n\tconst ALWAYS_POST = 'alwaysPost'\n\tconst CUSTOM_SELECTOR = 'customSelector'\n\n\t/// Route return attributes\n\tconst AS = 'as'\n\tconst PATH = 'path'\n\n\t/// Not used right now\n\t// const NEW_SCOPE = '_newScope'\n\t// const NEW_ROUTE = '_newRoute'\n\t// const NEW_RESOURCE = '_newResource'\n\t// const NEW_ALIAS = '_newAlias'\n\n\t/// BASIC RESOURCE\n\tconst _show = 'show'\n\tconst _edit = 'edit'\n\tconst _new = 'new'\n\tconst _list = 'list'\n\tconst _basicResource = (SS = DS) => {\n\t\t// selectedSelector\n\t\tconst r = {}\n\t\tr[SS + ID] = ID\n\t\tr[_show] = {}\n\t\tr[_edit] = {}\n\t\tr[_new] = {}\n\t\tr[_list] = {}\n\t\tr[_show][SS + HIDE] = true\n\t\tr[_new][SS + ID] = false\n\t\tr[_list][SS + ID] = false\n\t\tr[_list][SS + HIDE] = true\n\t\treturn r\n\t}\n\n\t/// Warnings and erros\n\tconst ERROR_HEADER = 'TrochaJS error: '\n\tconst WARNING_HEADER = 'TrochaJS warning: '\n\tconst ERROR_ROUTE_ALREADY_DEFINE = 'Route already declare'\n\tconst ERROR_SCOPE_AS_A_ROUTE = 'Scope is not printable a route'\n\tconst WARNING_RESOURCE_AS_A_ROUTE = 'Resource should not be used as a route'\n\tconst WARNING_ROUTE_ATTRIBUTE_NOT_SUPPORTED = 'Attribute not supported, skiped'\n/* End: src/v2/_variables.js */\n\t// Trocha class\n/* Begin: src/v2/_Trocha.js */\n\t// Route classes\n/* Begin: src/v2/_Route.js */\n\tclass Route {\n\t\t/**\n\t\t * Holds all the route information, note it's not protected(can't be inhered)\n\t\t * @private\n\t\t */\n\t\t#data = {\n\t\t\tparent: null,\n\t\t\tchilds: {},\n\t\t\tSS: DS, // selectedSelector\n\t\t\t// next attributes just for root\n\t\t\talwaysPost: false,\n\t\t\talwaysUrl: false,\n\t\t\tidMode: COLON,\n\t\t\tdomain: '',\n\t\t\tpost: '',\n\t\t\tpre: ''\n\t\t}\n\n\t\t/**\n\t\t * @param {Route} mySelf - tldr this\n\t\t * @param {string} id - id to compare to parents ids\n\t\t * @pure\n\t\t * @private\n\t\t * @recursive\n\t\t * @return {boolean} - does the parent or (parent parent and go on) have the id?\n\t\t */\n\t\t#anyParentHasThisId = (mySelf, id) => {\n\t\t\tlet SS = mySelf.#data.SS\n\t\t\tif (!mySelf.#data.parent) return false\n\t\t\treturn (\n\t\t\t\tmySelf.#data.parent[SS + ID] === id ||\n\t\t\t\tmySelf.#anyParentHasThisId(mySelf.#data.parent, id)\n\t\t\t)\n\t\t}\n\n\t\t/**\n\t\t * Adds a (custom)getter of attribute to mySelf\n\t\t * @param {Route} mySelf - tldr this\n\t\t * @param {string} attribute - name of the attribute to expose\n\t\t * @param {function} fun - to use as a custom getter for attribute\n\t\t * @param {boolean} skipSelector - if false will add selectedSelector to getter name\n\t\t * @sideEffect mySelf\n\t\t * @private\n\t\t */\n\t\t#newGetter = (mySelf, attribute, fun, skipSelector) => {\n\t\t\tlet SS = skipSelector ? '' : mySelf.#data.SS\n\t\t\tObject.defineProperty(mySelf, SS + attribute, {\n\t\t\t\tget() {\n\t\t\t\t\tif (fun) return fun()\n\t\t\t\t\telse return mySelf.#data[attribute]\n\t\t\t\t},\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: false\n\t\t\t})\n\t\t}\n\n\t\t/**\n\t\t * Constructor helper, set attributes and getters of current route\n\t\t * @param {Route} mySelf - tldr this\n\t\t * @param {string} attribute - name\n\t\t * @sideEffect mySelf - add getters, modify #data; posibleRouteDef - delete all attributes\n\t\t * @private\n\t\t */\n\t\t#defineMyAttributes = (mySelf, posibleRouteDef) => {\n\t\t\tlet SS = mySelf.#data.SS\n\n\t\t\t/**\n\t\t\t * @param {string} attribute - name of the attribute to add to #data then remove of mySelf\n\t\t\t * @pure false - depends on mySelf\n\t\t\t * @sideEffect mySelf\n\t\t\t */\n\t\t\tlet _setAndDisposeAttribute = attribute => {\n\t\t\t\tmySelf.#data[attribute] = posibleRouteDef[SS + attribute]\n\t\t\t\tdelete posibleRouteDef[SS + attribute]\n\t\t\t}\n\n\t\t\t_setAndDisposeAttribute(NAME)\n\t\t\t_setAndDisposeAttribute(ID)\n\t\t\t_setAndDisposeAttribute(DEFAULT_ID)\n\t\t\t_setAndDisposeAttribute(TYPE)\n\t\t\t_setAndDisposeAttribute(METHOD)\n\n\t\t\t_setAndDisposeAttribute(ALIAS)\n\t\t\t_setAndDisposeAttribute(RESOURCE)\n\n\t\t\t_setAndDisposeAttribute(HIDE)\n\t\t\t_setAndDisposeAttribute(POSTFIX)\n\t\t\t_setAndDisposeAttribute(JUST_ID)\n\t\t\t_setAndDisposeAttribute(PARENT_ID)\n\t\t\tif (false === posibleRouteDef[mySelf.#data.parent[SS + ID]])\n\t\t\t\t_setAndDisposeAttribute(mySelf.#data.parent[SS + ID])\n\t\t\tmySelf.#newGetter(mySelf, NAME)\n\t\t\tmySelf.#newGetter(mySelf, ID) // @TODO DOCUMENT ME\n\t\t\tmySelf.#newGetter(mySelf, METHOD)\n\t\t\tmySelf.#newGetter(mySelf, AS, () => mySelf.#as(mySelf))\n\t\t}\n\n\t\t/**\n\t\t * Constructor helper, create one child route\n\t\t * @param {Route} mySelf - tldr this\n\t\t * @param {object} routeDefinition - child route attributes\n\t\t * @param {string} name - route name\n\t\t * @sideEffect mySelf - add getters, modify #data; routeDefinition add $name\n\t\t * @private\n\t\t * @throws ERROR_ROUTE_ALREADY_DEFINE\n\t\t */\n\t\t#createChildRoute = (mySelf, routeDefinition, name) => {\n\t\t\tlet SS = mySelf.#data.SS\n\t\t\tif (mySelf.#data.childs[name])\n\t\t\t\t_throwError(mySelf, ERROR_ROUTE_ALREADY_DEFINE, name)\n\t\t\tlet routeSubclasses = [Route, Alias, Resource, Scope]\n\t\t\trouteSubclasses.forEach(routeSubclass => {\n\t\t\t\tif (routeSubclass.is(routeDefinition, SS))\n\t\t\t\t\trouteDefinition = routeSubclass.diggest(routeDefinition, SS, SS)\n\t\t\t})\n\t\t\trouteDefinition[SS + NAME] = name\n\t\t\tlet routeTypes = {}\n\t\t\trouteTypes[ROUTE] = Route\n\t\t\trouteTypes[undefined] = Route\n\t\t\trouteTypes[_ALIAS] = Alias\n\t\t\trouteTypes[SCOPE] = Scope\n\t\t\trouteTypes[_RESOURCE] = Resource\n\n\t\t\tlet newRoute = new routeTypes[routeDefinition[SS + TYPE]](\n\t\t\t\tmySelf,\n\t\t\t\trouteDefinition,\n\t\t\t\tSS,\n\t\t\t\tmySelf.#data.root\n\t\t\t)\n\t\t\tmySelf.#data.childs[name] = newRoute\n\t\t\tmySelf.#newGetter(mySelf, name, () => mySelf.#data.childs[name], true)\n\t\t}\n\n\t\t/**\n\t\t * Constructor helper, create child routes\n\t\t * @param {Route} mySelf - tldr this\n\t\t * @param {object} argChildRoutes - child routeDefinitions\n\t\t * @param {boolean} skipResource - prevent infinity loop on resource creation\n\t\t * @sideEffect mySelf - add getters, modify #data\n\t\t * @private\n\t\t * @recursive\n\t\t */\n\t\t#diggestChildRoutes = (mySelf, argChildRoutes, skipResource) => {\n\t\t\tlet SS = mySelf.#data.SS\n\t\t\tif (!skipResource && mySelf.#data[TYPE] === _RESOURCE) {\n\t\t\t\tlet resourceChilds = mySelf.#data[RESOURCE]\n\t\t\t\tdelete resourceChilds[SS + ID]\n\t\t\t\tmySelf.#diggestChildRoutes(mySelf, resourceChilds, true)\n\t\t\t}\n\n\t\t\tlet posibleChildRoutesNames = Object.keys(argChildRoutes)\n\t\t\twhile (posibleChildRoutesNames.length) {\n\t\t\t\tlet posibleChild = posibleChildRoutesNames.pop()\n\t\t\t\tif (\n\t\t\t\t\t// This case disable any <id>=false\n\t\t\t\t\targChildRoutes[posibleChild] === false &&\n\t\t\t\t\tmySelf.#anyParentHasThisId(mySelf, posibleChild)\n\t\t\t\t)\n\t\t\t\t\tmySelf.#data[posibleChild] = false\n\t\t\t\telse {\n\t\t\t\t\tmySelf.#createChildRoute(\n\t\t\t\t\t\tmySelf,\n\t\t\t\t\t\targChildRoutes[posibleChild],\n\t\t\t\t\t\tposibleChild\n\t\t\t\t\t)\n\t\t\t\t\tif (mySelf.#data[TYPE] === SCOPE) {\n\t\t\t\t\t\tlet scopedChild = { ...argChildRoutes[posibleChild] }\n\t\t\t\t\t\tscopedChild[SS + PARENT_ID] = false\n\t\t\t\t\t\tmySelf.#createChildRoute(\n\t\t\t\t\t\t\tmySelf.#data.parent,\n\t\t\t\t\t\t\tscopedChild,\n\t\t\t\t\t\t\tposibleChild\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * getter function of $as\n\t\t * @param {Route} mySelf - tldr this\n\t\t * @recursive via parent.$as\n\t\t * @return {string} flat self and parents name separated by _\n\t\t */\n\t\t#as = mySelf => {\n\t\t\tlet SS = mySelf.#data.SS\n\t\t\treturn mySelf.#data.parent[SS + AS]\n\t\t\t\t? `${mySelf.#data.parent[SS + AS]}_${mySelf.#data[NAME]}`\n\t\t\t\t: mySelf.#data[NAME]\n\t\t}\n\n\t\tconstructor(\n\t\t\tmyParent,\n\t\t\targRouteDef,\n\t\t\targCustomSelector,\n\t\t\targRoot,\n\t\t\t// Arguments for root Route\n\t\t\targChildRoutes = {},\n\t\t\targDomain,\n\t\t\targAlwaysUrl,\n\t\t\targPre,\n\t\t\targPost,\n\t\t\targAlwaysPost,\n\t\t\t//argAlwaysPre,// @TODO\n\t\t\targIdMode\n\t\t) {\n\t\t\tlet SS = (this.#data.SS = argCustomSelector || DS) // selectedSelector\n\t\t\tif (\n\t\t\t\tmyParent ||\n\t\t\t\t(argRouteDef && argRouteDef[SS + NAME] && argRouteDef[SS + TYPE])\n\t\t\t) {\n\t\t\t\t// It's a normal route\n\t\t\t\tthis.#data.parent = myParent\n\t\t\t\tthis.#data.root = argRoot\n\t\t\t\tthis.#defineMyAttributes(this, argRouteDef)\n\t\t\t\tthis.#diggestChildRoutes(this, argRouteDef)\n\t\t\t} else {\n\t\t\t\t// It's the root route\n\t\t\t\tconst _setRootAttribute = (attribute, value) =>\n\t\t\t\t\t(this.#data[attribute] = value || this.#data[attribute])\n\t\t\t\t_setRootAttribute(DOMAIN, argDomain)\n\t\t\t\tthis.#newGetter(this, DOMAIN)\n\t\t\t\t_setRootAttribute(ALWAYS_URL, argAlwaysUrl)\n\t\t\t\t_setRootAttribute(ALWAYS_POST, argAlwaysPost)\n\t\t\t\t_setRootAttribute(POSTFIX, argPost)\n\t\t\t\t_setRootAttribute(PREFIX, argPre)\n\t\t\t\t_setRootAttribute(ID_MODE, argIdMode)\n\t\t\t\tthis.#data.root = this.#data\n\t\t\t\tdelete this[PATH]\n\t\t\t\tthis.#newGetter(this, _RESOURCE, () => _basicResource(SS))\n\t\t\t\tthis.#diggestChildRoutes(this, argChildRoutes)\n\t\t\t}\n\t\t}\n\n\t\t_newRoute = args => {\n\t\t\targs[TYPE] = ROUTE\n\t\t\tif (!Route.is(args, '')) return false\n\t\t\tthis.#createChildRoute(\n\t\t\t\tthis,\n\t\t\t\tRoute.diggest(args, this.#data.SS, ''),\n\t\t\t\targs[NAME]\n\t\t\t)\n\t\t}\n\t\t_newScope = args => {\n\t\t\targs[TYPE] = SCOPE\n\t\t\tif (!Scope.is(args, '')) return false\n\t\t\tthis.#createChildRoute(\n\t\t\t\tthis,\n\t\t\t\tScope.diggest(args, this.#data.SS, ''),\n\t\t\t\targs[NAME]\n\t\t\t)\n\t\t}\n\t\t_newAlias = args => {\n\t\t\targs[TYPE] = _ALIAS\n\t\t\tif (!Alias.is(args, '')) return false\n\t\t\tthis.#createChildRoute(\n\t\t\t\tthis,\n\t\t\t\tAlias.diggest(args, this.#data.SS, ''),\n\t\t\t\targs[NAME]\n\t\t\t)\n\t\t}\n\t\t_newResource = args => {\n\t\t\targs[TYPE] = _RESOURCE\n\t\t\tif (!Resource.is(args, '')) return false\n\t\t\tthis.#createChildRoute(\n\t\t\t\tthis,\n\t\t\t\tResource.diggest(args, this.#data.SS, ''),\n\t\t\t\targs[NAME]\n\t\t\t)\n\t\t}\n\n\t\t// prettier-ignore // < Does not work ¬¬\n/* Begin: src/v2/_Route_path.js */\n\t\tpath(routeParams = {}, customNameFun) {\n\t\t\tconst myData = this.#data\n\t\t\tconst parent = myData.parent || {}\n\t\t\tconst rootData = myData.root\n\t\t\tconst SS = myData.SS\n\t\t\tconst _formatID = _FORMAT_ID_FUN(rootData[ID_MODE])\n\t\t\tlet r = s\n\n\t\t\tif (myData[NAME] === undefined) return ''\n\n\t\t\t// 1 print the domain\n\t\t\tr =\n\t\t\t\trootData[DOMAIN] &&\n\t\t\t\t// !parent[PATH] &&\n\t\t\t\trouteParams[URL] !== false &&\n\t\t\t\t(routeParams[URL] || rootData[ALWAYS_URL])\n\t\t\t\t\t? rootData[DOMAIN]\n\t\t\t\t\t: s\n\t\t\tdelete routeParams[URL]\n\n\t\t\t// 2 add the prefix\n\t\t\tr +=\n\t\t\t\trootData[PREFIX] && (routeParams[PREFIX] || routeParams[EXTENDED])\n\t\t\t\t\t? rootData[PREFIX]\n\t\t\t\t\t: s\n\t\t\tdelete routeParams[PREFIX]\n\n\t\t\t// 3 print parent paths\n\t\t\tlet parentPathArg = {}\n\t\t\tparentPathArg[POSTFIX] = false\n\t\t\tr += parent[PATH] ? parent[PATH](parentPathArg, () => true) : s\n\n\t\t\t// 4.A print name & id(name) from customNameFun like Alias\n\t\t\tlet hide =\n\t\t\t\trouteParams[HIDE] !== undefined\n\t\t\t\t\t? routeParams[HIDE]\n\t\t\t\t\t: myData[HIDE] || (myData[JUST_ID] && myData[DEFAULT_ID] === false)\n\t\t\tlet customNameFromInhered\n\t\t\tif ('function' === typeof customNameFun)\n\t\t\t\tcustomNameFromInhered = customNameFun(myData)\n\t\t\tif ('string' === typeof customNameFromInhered) r += customNameFromInhered\n\t\t\telse {\n\t\t\t\t// 4.B print default name & id(name)\n\t\t\t\tlet myId = _formatID(myData[ID])\n\t\t\t\tif (\n\t\t\t\t\t// 4.B.1 justId case\n\t\t\t\t\trouteParams[JUST_ID] !== false &&\n\t\t\t\t\t(myData[JUST_ID] && myData[ID] && myData[myData[ID]] !== false)\n\t\t\t\t) {\n\t\t\t\t\tr += _ + myId\n\t\t\t\t} else {\n\t\t\t\t\t// 4.B.2 hide case\n\t\t\t\t\tlet noIdentifier = myData[ID] ? routeParams[ID] === false : true\n\t\t\t\t\tr += hide ? s : _ + myData[NAME]\n\t\t\t\t\tr += noIdentifier ? s : _ + myId\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// 5 add the postfix\n\t\t\t/**\n\t\t\t * @TODO Document hide also remove postfix\n\t\t\t */\n\t\t\tr +=\n\t\t\t\trootData[POSTFIX] &&\n\t\t\t\t!hide &&\n\t\t\t\trouteParams[POSTFIX] !== false &&\n\t\t\t\t(rootData[ALWAYS_POST] ||\n\t\t\t\t\tmyData[POSTFIX] ||\n\t\t\t\t\trouteParams[POSTFIX] ||\n\t\t\t\t\trouteParams[EXTENDED])\n\t\t\t\t\t? rootData[POSTFIX]\n\t\t\t\t\t: s\n\t\t\tdelete routeParams[POSTFIX]\n\n\t\t\t// Note next 2 step first clear the routeParams then later on print the colected data\n\t\t\t// 7-1 get query part(also know as search... the ?asd=1 part)\n\t\t\tlet query = {}\n\t\t\tif (routeParams[QUERY]) {\n\t\t\t\tquery = JSON.parse(JSON.stringify(routeParams[QUERY]))\n\t\t\t\tdelete routeParams[QUERY]\n\t\t\t}\n\n\t\t\t// 8-1 get fragment part(also know as anchor... the #asd part)\n\t\t\tlet fragment = s\n\t\t\tif (routeParams[FRAGMENT]) {\n\t\t\t\tfragment = routeParams[FRAGMENT]\n\t\t\t\tdelete routeParams[FRAGMENT]\n\t\t\t}\n\n\t\t\t// 6 Replace Or Remove(RoR) Ids\n\n\t\t\t// 6.1 RoR parentId\n\t\t\tif (\n\t\t\t\tparent[SS + ID] &&\n\t\t\t\t!routeParams[parent[SS + ID]] &&\n\t\t\t\t(myData[ID] === false ||\n\t\t\t\t\trouteParams[PARENT_ID] === false ||\n\t\t\t\t\tmyData[PARENT_ID] === false)\n\t\t\t)\n\t\t\t\tr = r.replace(_formatID(parent[SS + ID], _PREID), s)\n\n\t\t\t// 6.2 Remove parents Ids designed in constructor\n\t\t\tObject.keys(myData).forEach(idName => {\n\t\t\t\tif (myData[idName] === false && !routeParams[idName])\n\t\t\t\t\treturn (r = r.replace(_formatID(idName, _PREID), s))\n\t\t\t})\n\n\t\t\t// 6.2 RoR selected Ids in path params\n\t\t\tObject.keys(routeParams).forEach(idName => {\n\t\t\t\tif (routeParams[idName] === false)\n\t\t\t\t\t// Remove\n\t\t\t\t\tr = r.replace(_formatID(idName, _PREID), s)\n\t\t\t\t// Replace\n\t\t\t\telse r = r.replace(_formatID(idName), routeParams[idName])\n\t\t\t})\n\n\t\t\t// 7 Now add the query\n\t\t\tObject.keys(query).forEach(function(key, i, array) {\n\t\t\t\tif (i === 0) r += '?'\n\t\t\t\tif (Array.isArray(query[key]))\n\t\t\t\t\tquery[key].forEach(\n\t\t\t\t\t\t(value, _i) =>\n\t\t\t\t\t\t\t(r +=\n\t\t\t\t\t\t\t\tencodeURIComponent(key) +\n\t\t\t\t\t\t\t\t'[]=' +\n\t\t\t\t\t\t\t\tencodeURIComponent(value) +\n\t\t\t\t\t\t\t\t(query[key].length - 1 !== _i || array.length - 1 !== i ? '&' : ''))\n\t\t\t\t\t)\n\t\t\t\telse\n\t\t\t\t\tr +=\n\t\t\t\t\t\tencodeURIComponent(key) +\n\t\t\t\t\t\t'=' +\n\t\t\t\t\t\tencodeURIComponent(query[key]) +\n\t\t\t\t\t\t(array.length - 1 !== i ? '&' : '')\n\t\t\t})\n\n\t\t\t// 8 Now add the fragment\n\t\t\tif (fragment) r += '#' + encodeURIComponent(fragment)\n\n\t\t\treturn r\n\t\t}\n/* End: src/v2/_Route_path.js */\n\n\t\ttoString = () => this.#as(this)\n\n\t\tstatic DEFAULT_METHOD = GET\n\n\t\t/**\n\t\t * Check if given routeDefinition is ROUTE\n\t\t * @param {object} routeDefinition -\n\t\t * @param {string} SS - selectedSelector normally $\n\t\t * @static\n\t\t * @pure\n\t\t * @return {boolean} routeDefinition is route?\n\t\t */\n\t\tstatic is(routeDefinition, SS) {\n\t\t\treturn (\n\t\t\t\trouteDefinition[SS + TYPE] === ROUTE ||\n\t\t\t\t('object' === typeof routeDefinition &&\n\t\t\t\t\trouteDefinition[SS + TYPE] === undefined)\n\t\t\t)\n\t\t}\n\n\t\t/**\n\t\t * This function serve 2 purposes:\n\t\t * (With just first 3 params) Sanitize routeDefinition for ROUTE valid params (this behabior is override)\n\t\t * (With full params) add <routeDefinition>.<IS><attributes> to <dest>.<SS><attributes> (this behabior is not inhered)\n\t\t * @tobe_overload\n\t\t * @param {object} routeDefinition -\n\t\t * @param {string} SS - selector to be return\n\t\t * @param {string} IS - selector to be find\n\t\t * @param {object} dest - another routeDefinition\n\t\t * @param {array<string>} attributes - to be added from routeDefinition to dest\n\t\t * @sideEffect dest\n\t\t */\n\t\tstatic diggest = (routeDefinition, SS, IS, dest, attributes) => {\n\t\t\tif (dest && attributes)\n\t\t\t\t// is used from subroutes\n\t\t\t\tattributes.forEach(attribute => {\n\t\t\t\t\tdest[SS + attribute] = routeDefinition[IS + attribute]\n\t\t\t\t})\n\t\t\telse {\n\t\t\t\tlet r = {}\n\t\t\t\tr[SS + TYPE] = ROUTE\n\t\t\t\tr[SS + METHOD] = routeDefinition[IS + METHOD] || Route.DEFAULT_METHOD\n\t\t\t\tRoute.diggest(routeDefinition, SS, IS, r, [\n\t\t\t\t\tID,\n\t\t\t\t\tHIDE,\n\t\t\t\t\tJUST_ID,\n\t\t\t\t\tPOSTFIX,\n\t\t\t\t\tPARENT_ID\n\t\t\t\t])\n\t\t\t\tRoute._trimSelector(IS, routeDefinition, r)\n\t\t\t\treturn r\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Add the routes defined (those without the current selector) to the\n\t\t * diggested routeDefinition(dest), note this only works with a selectorl else maybe\n\t\t * it's from function creation route like _newScope\n\t\t * @static\n\t\t * @pure false\n\t\t * @side_effect dest\n\t\t * @param {string} SS selectedSelector\n\t\t * @param {object} src routeDefinition in\n\t\t * @param {object} dest routeDefinition out\n\t\t */\n\t\tstatic _trimSelector = (IS, src, dest) => {\n\t\t\tif (IS === '') return\n\t\t\tObject.keys(src).forEach(attribute => {\n\t\t\t\tif (attribute.slice(0, 2) !== IS) dest[attribute] = src[attribute]\n\t\t\t\telse _throwWarning(this, WARNING_ROUTE_ATTRIBUTE_NOT_SUPPORTED, attribute)\n\t\t\t})\n\t\t}\n\t}\n/* End: src/v2/_Route.js */\n/* Begin: src/v2/_Alias.js */\n\tclass Alias extends Route {\n\t\tconstructor(...args) {\n\t\t\tsuper(...args)\n\t\t}\n\n\t\t/**\n\t\t * Sanitize routeDefinition for ALIAS valid params\n\t\t * @static\n\t\t * @overload Route.diggest\n\t\t * @param {object} routeDefinition\n\t\t * @param {string} SS - selector to be return\n\t\t * @param {string} IS - selector to be find\n\t\t * @return {object} sanitized copy of routeDefinition\n\t\t */\n\t\tstatic diggest(routeDefinition, SS, IS) {\n\t\t\tlet r = {}\n\t\t\tr[SS + TYPE] = _ALIAS\n\t\t\tr[SS + ALIAS] = routeDefinition[IS + ALIAS] || routeDefinition\n\t\t\tr[SS + METHOD] = routeDefinition[IS + METHOD] || Route.DEFAULT_METHOD\n\t\t\tRoute.diggest(routeDefinition, SS, IS, r, [ID, POSTFIX, PARENT_ID])\n\t\t\tif ('string' !== typeof routeDefinition)\n\t\t\t\tRoute._trimSelector(IS, routeDefinition, r)\n\t\t\treturn r\n\t\t}\n\n\t\t/**\n\t\t * Check if given routeDefinition is ALIAS\n\t\t * @see Route.is\n\t\t * @pure\n\t\t * @static\n\t\t * @override\n\t\t * @return {boolean} routeDefinition is alias?\n\t\t */\n\t\tstatic is(routeDefinition, SS) {\n\t\t\treturn (\n\t\t\t\t'string' === typeof routeDefinition ||\n\t\t\t\t(routeDefinition[SS + TYPE] === _ALIAS && routeDefinition[SS + ALIAS])\n\t\t\t)\n\t\t}\n\n\t\t/**\n\t\t * Print ALIAS type routes\n\t\t * diferences with Route.path: use alias instead of name and if it's base will not start with /\n\t\t * @see Route.path\n\t\t * @overload Route.path\n\t\t */\n\t\tpath(routeParams = {}) {\n\t\t\treturn super.path(routeParams, function(myData) {\n\t\t\t\t// Note Alias dnt support hide nor justId in creation\n\t\t\t\tconst parent = myData.parent || {}\n\t\t\t\tconst rootData = myData.root\n\t\t\t\tconst _formatID = _FORMAT_ID_FUN(rootData[ID_MODE])\n\t\t\t\tconst myId = _formatID(myData[ID], _PREID)\n\t\t\t\tlet r = s\n\n\t\t\t\tif (myData[ID] && routeParams[JUST_ID]) {\n\t\t\t\t\tr += myId\n\t\t\t\t} else {\n\t\t\t\t\tlet useID = !!myData[ID] && routeParams[myData[ID]] !== false\n\t\t\t\t\tr += parent.constructor.name === 'Trocha' ? s : _\n\t\t\t\t\tr += routeParams[HIDE] ? s : myData[ALIAS]\n\t\t\t\t\tr += useID ? myId : s\n\t\t\t\t}\n\t\t\t\treturn r\n\t\t\t})\n\t\t}\n\t}\n/* End: src/v2/_Alias.js */\n/* Begin: src/v2/_Resource.js */\n\tclass Resource extends Route {\n\t\tconstructor(...args) {\n\t\t\tsuper(...args)\n\t\t}\n\n\t\t/**\n\t\t * @override\n\t\t */\n\t\tstatic diggest(routeDefinition, SS, IS) {\n\t\t\tlet r = {}\n\t\t\tr[SS + TYPE] = _RESOURCE\n\t\t\tr[SS + RESOURCE] = routeDefinition[IS + RESOURCE] || _basicResource(SS)\n\t\t\tRoute.diggest(routeDefinition, SS, IS, r, [ID])\n\t\t\tRoute._trimSelector(IS, routeDefinition, r)\n\t\t\treturn r\n\t\t}\n\n\t\t/**\n\t\t * @override\n\t\t */\n\t\tstatic is(routeDefinition, SS) {\n\t\t\treturn (\n\t\t\t\trouteDefinition[SS + TYPE] === _RESOURCE && routeDefinition[SS + ID] // &&\n\t\t\t\t// routeDefinition[SS+RESOURCE]\n\t\t\t)\n\t\t}\n\n\t\t/**\n\t\t * @override\n\t\t */\n\t\tpath(routeParams = {}, force) {\n\t\t\treturn super.path(routeParams, function(myData) {\n\t\t\t\tif ('function' === typeof force && force() !== true)\n\t\t\t\t\t_throwWarning(undefined, WARNING_RESOURCE_AS_A_ROUTE)\n\t\t\t\treturn false\n\t\t\t})\n\t\t}\n\t}\n/* End: src/v2/_Resource.js */\n/* Begin: src/v2/_Scope.js */\n\tclass Scope extends Route {\n\t\tconstructor(...args) {\n\t\t\tsuper(...args)\n\t\t}\n\n\t\t/**\n\t\t * @override\n\t\t */\n\t\tstatic diggest(routeDefinition, SS, IS) {\n\t\t\tlet r = {}\n\t\t\tr[SS + TYPE] = SCOPE\n\t\t\tr[SS + JUST_ID] = true\n\t\t\tr[SS + DEFAULT_ID] = routeDefinition[IS + DEFAULT_ID] || false\n\t\t\tRoute.diggest(routeDefinition, SS, IS, r, [ID, HIDE])\n\t\t\tRoute._trimSelector(IS, routeDefinition, r)\n\t\t\treturn r\n\t\t}\n\n\t\t/**\n\t\t * @override\n\t\t */\n\t\tstatic is(routeDefinition, SS) {\n\t\t\treturn (\n\t\t\t\t'object' === typeof routeDefinition &&\n\t\t\t\trouteDefinition[SS + TYPE] === SCOPE &&\n\t\t\t\trouteDefinition[SS + ID] // Should scope always have id????\n\t\t\t)\n\t\t}\n\n\t\t/**\n\t\t * @override\n\t\t */\n\t\tpath(routeParams = {}, force) {\n\t\t\treturn super.path(routeParams, function(myData) {\n\t\t\t\tif ('function' === typeof force && force() !== true)\n\t\t\t\t\t_throwError(undefined, ERROR_SCOPE_AS_A_ROUTE)\n\t\t\t\treturn false\n\t\t\t})\n\t\t}\n\t}\n/* End: src/v2/_Scope.js */\n\n\tclass Trocha extends Route {\n\t\tconstructor(args = {}) {\n\t\t\tsuper(\n\t\t\t\tnull,\n\t\t\t\tnull, //Because it's the root\n\t\t\t\targs[CUSTOM_SELECTOR],\n\t\t\t\tnull,\n\t\t\t\targs[ROUTES],\n\t\t\t\targs[DOMAIN],\n\t\t\t\targs[ALWAYS_URL],\n\t\t\t\targs[PREFIX],\n\t\t\t\targs[POSTFIX],\n\t\t\t\targs[ALWAYS_POST],\n\t\t\t\t//args[ALWAYSPRE],/**@TODO\n\t\t\t\targs[ID_MODE]\n\t\t\t)\n\t\t}\n\n\t\t/*\n\t\t * STATIC AVAILABLE ATTRIBUTES\n\t\t */\n\t\t/*\n\t\t * Offers all the route types\n\t\t */\n\t\tstatic get ROUTE() {\n\t\t\treturn ROUTE\n\t\t}\n\t\tstatic get SCOPE() {\n\t\t\treturn SCOPE\n\t\t}\n\t\tstatic get RESOURCE() {\n\t\t\treturn _RESOURCE\n\t\t}\n\t\tstatic get ALIAS() {\n\t\t\treturn _ALIAS\n\t\t}\n\n\t\t/*\n\t\t * Offers all the request types\n\t\t */\n\t\tstatic get OPTIONS() {\n\t\t\treturn OPTIONS\n\t\t}\n\t\tstatic get GET() {\n\t\t\treturn GET\n\t\t}\n\t\tstatic get HEAD() {\n\t\t\treturn HEAD\n\t\t}\n\t\tstatic get POST() {\n\t\t\treturn POST\n\t\t}\n\t\tstatic get PUT() {\n\t\t\treturn PUT\n\t\t}\n\t\tstatic get PATCH() {\n\t\t\treturn PATCH\n\t\t}\n\t\tstatic get DELETE() {\n\t\t\treturn DELETE\n\t\t}\n\t\tstatic get TRACE() {\n\t\t\treturn TRACE\n\t\t}\n\t\tstatic get CONNECT() {\n\t\t\treturn CONNECT\n\t\t}\n\n\t\t/*\n\t\t * Offers ID modes\n\t\t */\n\t\tstatic get BRACKETS() {\n\t\t\treturn BRACKETS\n\t\t}\n\t\tstatic get COLON() {\n\t\t\treturn COLON\n\t\t}\n\n\t\t/*\n\t\t * Offers basic resource structure\n\t\t * @See Route constructor for custom selector\n\t\t */\n\t\tstatic get $RESOURCE() {\n\t\t\treturn _basicResource()\n\t\t}\n\t}\n/* End: src/v2/_Trocha.js */\n/* End: src/v2/_core.js */\n\tparent.Trocha = Trocha\n\tparent.Route = Route\n\tparent.Alias = Alias\n\tparent.Resource = Resource\n\tparent.Scope = Scope\n})(this)\n"],"file":"trocha_library.babeled.js"}