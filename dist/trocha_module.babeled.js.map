{"version":3,"sources":["trocha_module.es6.js"],"names":["_throwError","scope","error_text","value","TrochaError","ERROR_HEADER","Error","_throwWarning","warning_text","console","warn","WARNING_HEADER","s","DS","ID","URL","NAME","HIDE","TYPE","PREFIX","ALIAS","QUERY","POSTFIX","EXTENDED","METHOD","DOMAIN","ROUTES","ID_MODE","JUST_ID","FRAGMENT","RESOURCE","PARENT_ID","SEPARATOR","DEFAULT_ID","ALWAYS_URL","ALWAYS_POST","FIRST_SEPARATOR","CUSTOM_SELECTOR","GET","POST","PUT","PATCH","DELETE","OPTIONS","HEAD","TRACE","CONNECT","ROUTE","SCOPE","_RESOURCE","_ALIAS","SLASH","BACK_SLASH","DOT","_PREID","_AVAILABLE_SEPARATORS","undefined","COLON","BRACKETS","_ID_MODE_REPLACE","_AVAILABLE_ID_MODES","_FORMAT_ID_FUN","currentIdMode","idName","template","replace","AS","PATH","_show","_edit","_new","_list","_basicResource","SS","r","ERROR_ROUTE_ALREADY_DEFINE","ERROR_SCOPE_AS_A_ROUTE","WARNING_RESOURCE_AS_A_ROUTE","WARNING_ROUTE_ATTRIBUTE_NOT_SUPPORTED","Route","myParent","argRouteDef","argCustomSelector","argRoot","argChildRoutes","argDomain","argAlwaysUrl","argPre","argPost","argAlwaysPost","argIdMode","argSeparator","argfirstSeparator","parent","childs","alwaysPost","alwaysUrl","idMode","domain","post","pre","separator","firstSeparator","mySelf","id","attribute","fun","skipSelector","Object","defineProperty","get","enumerable","configurable","posibleRouteDef","_setAndDisposeAttribute","routeDefinition","name","routeSubclasses","Alias","Resource","Scope","forEach","routeSubclass","is","diggest","routeTypes","newRoute","root","skipResource","resourceChilds","posibleChildRoutesNames","keys","length","posibleChild","pop","scopedChild","args","_setRootAttribute","routeParams","customNameFun","myData","rootData","isFirtsParent","_formatID","parentPathArg","parentPathResponse","thisIsChildPath","_","hide","customNameFromInhered","myId","noIdentifier","query","JSON","parse","stringify","fragment","key","i","array","Array","isArray","_i","encodeURIComponent","IS","dest","attributes","DEFAULT_METHOD","_trimSelector","src","slice","useID","constructor","force","Trocha"],"mappings":"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","sourcesContent":["/** @license trocha@0.2.2 - 2019-05-08\n* Trocha.js \n* \n* This source code is licensed under the Mozillas Public license 2.0 found in the \n* LICENSE file in the root directory of this source tree. \n*/\n/**\n * This file is intended for module enviorements\n * Works like React\n * Note we also make public a lot of const for easy usage\n */\n/* Begin: src/v2/_core.js */\n// Utility methods\n/* Begin: src/v2/_utils.js */\nlet _throwError = (scope, error_text, value) => {\n\tclass TrochaError extends Error {\n\t\tconstructor(scope, error_text, value) {\n\t\t\t// Pass remaining arguments (including vendor specific ones) to parent constructor\n\t\t\tsuper(ERROR_HEADER + error_text)\n\n\t\t\t// Custom debugging information\n\t\t\tthis.scope = scope\n\t\t\tthis.value = value\n\t\t}\n\t}\n\tthrow new TrochaError(scope, error_text, value)\n}\n\nlet _throwWarning = (scope, warning_text, value) => {\n\tconsole.warn(WARNING_HEADER + warning_text, value || s, scope || s)\n}\n/* End: src/v2/_utils.js */\n// Const used abroad the library\n/* Begin: src/v2/_variables.js */\n/*\n * Why variables are outside the Trocha class?\n * Because protected attributes are still not supported\n * and because Route share a lot of symbols with Trocha\n */\n\n/// Utility vars\nconst s = '' // Force string\nconst DS = '$' // DEFAULT_SELECTOR\n\n/// Input attributes\nconst ID = 'id'\nconst URL = 'url'\nconst NAME = 'name'\nconst HIDE = 'hide'\nconst TYPE = 'type'\nconst PREFIX = 'pre'\nconst ALIAS = 'alias'\nconst QUERY = 'query'\nconst POSTFIX = 'post'\nconst EXTENDED = 'ext'\nconst METHOD = 'method'\nconst DOMAIN = 'domain'\nconst ROUTES = 'routes'\nconst ID_MODE = 'idMode'\nconst JUST_ID = 'justId'\n// const AFTER_ID = 'afterId' // FAILS & no DOCS\nconst FRAGMENT = 'fragment'\nconst RESOURCE = 'resource'\nconst PARENT_ID = 'parentId'\nconst SEPARATOR = 'separator'\nconst DEFAULT_ID = 'defaultId'\nconst ALWAYS_URL = 'alwaysUrl'\nconst ALWAYS_POST = 'alwaysPost'\nconst FIRST_SEPARATOR = 'firstSeparator'\nconst CUSTOM_SELECTOR = 'customSelector'\n\n/// Request method types\n// @see _Trocha.js /// Offers all the request types\nconst GET = 'GET'\nconst POST = 'POST'\nconst PUT = 'PUT'\nconst PATCH = 'PATCH'\nconst DELETE = 'DELETE'\nconst OPTIONS = 'OPTIONS'\nconst HEAD = 'HEAD'\nconst TRACE = 'TRACE'\nconst CONNECT = 'CONNECT'\n\n/// Route types\n// @see _Trocha.js\nconst ROUTE = 'ROUTE'\nconst SCOPE = 'SCOPE'\nconst _RESOURCE = 'RESOURCE'\nconst _ALIAS = 'ALIAS'\n\n/// custom separator\n// @see _Trocha.js\nconst SLASH = 'SLASH'\nconst BACK_SLASH = 'BACK_SLASH'\nconst DOT = 'DOT'\n\n// Next const are private helpers for ID modes\nconst _PREID = '_PREID'\nconst _AVAILABLE_SEPARATORS = {}\n_AVAILABLE_SEPARATORS[SLASH] = {}\n_AVAILABLE_SEPARATORS[SLASH][SEPARATOR] = '/'\n_AVAILABLE_SEPARATORS[SLASH][FIRST_SEPARATOR] = true\n_AVAILABLE_SEPARATORS[BACK_SLASH] = {}\n_AVAILABLE_SEPARATORS[BACK_SLASH][SEPARATOR] = '\\\\'\n_AVAILABLE_SEPARATORS[BACK_SLASH][FIRST_SEPARATOR] = false\n_AVAILABLE_SEPARATORS[DOT] = {}\n_AVAILABLE_SEPARATORS[DOT][SEPARATOR] = '.'\n_AVAILABLE_SEPARATORS[DOT][FIRST_SEPARATOR] = false\n_AVAILABLE_SEPARATORS[undefined] = {}\n\n/// ID modes\n// @see _Trocha.js\nconst COLON = 'COLON'\nconst BRACKETS = 'BRACKETS'\n\n// Next const are private helpers for ID modes\nconst _ID_MODE_REPLACE = 'Ñ' // Can be any rare character\nconst _AVAILABLE_ID_MODES = {} // In teory only used in _FORMAT_ID_FUN\n_AVAILABLE_ID_MODES[BRACKETS] = `{${_ID_MODE_REPLACE}}`\n_AVAILABLE_ID_MODES[COLON] = `:${_ID_MODE_REPLACE}`\n\n/**\n * Interpolator of id mode to be used in path function\n * @todo should be Route protected(private & inheritable) method\n * @param {string} currentIdMode - can be BRACKETS | COLON\n * @second_order\n * @pure\n * @private\n * @return {function} see function below\n */\nconst _FORMAT_ID_FUN = currentIdMode =>\n\t/**\n\t * Interpolate template with _AVAILABLE_ID_MODES[currentIdMode] and idName\n\t * @param {string} idName\n\t * @param {template_literal | string} template - should contain _ID_MODE_REPLACE value; default _ID_MODE_REPLACE\n\t * @lambda\n\t * @pure false - depends on currentIdMode, _AVAILABLE_ID_MODES and _ID_MODE_REPLACE\n\t * @example λ('zxc',`asd${_ID_MODE_REPLACE}qwe`) will return 'asd:zxcqwe' or 'asd{zxc}qwe'\n\t * @return {string}\n\t */\n\t(idName, template = _ID_MODE_REPLACE) =>\n\t\ttemplate.replace(\n\t\t\t_ID_MODE_REPLACE,\n\t\t\t_AVAILABLE_ID_MODES[currentIdMode].replace(_ID_MODE_REPLACE, idName)\n\t\t)\n\n/// Route return attributes\nconst AS = 'as'\nconst PATH = 'path'\n\n/// Not used right now\n// const NEW_SCOPE = '_newScope'\n// const NEW_ROUTE = '_newRoute'\n// const NEW_RESOURCE = '_newResource'\n// const NEW_ALIAS = '_newAlias'\n\n/// BASIC RESOURCE\nconst _show = 'show'\nconst _edit = 'edit'\nconst _new = 'new'\nconst _list = 'list'\nconst _basicResource = (SS = DS) => {\n\t// selectedSelector\n\tconst r = {}\n\tr[SS + ID] = ID\n\tr[_show] = {}\n\tr[_edit] = {}\n\tr[_new] = {}\n\tr[_list] = {}\n\tr[_show][SS + HIDE] = true\n\tr[_new][SS + ID] = false\n\tr[_list][SS + ID] = false\n\tr[_list][SS + HIDE] = true\n\treturn r\n}\n\n/// Warnings and erros\nconst ERROR_HEADER = 'TrochaJS error: '\nconst WARNING_HEADER = 'TrochaJS warning: '\nconst ERROR_ROUTE_ALREADY_DEFINE = 'Route already declare'\nconst ERROR_SCOPE_AS_A_ROUTE = 'Scope is not printable a route'\nconst WARNING_RESOURCE_AS_A_ROUTE = 'Resource should not be used as a route'\nconst WARNING_ROUTE_ATTRIBUTE_NOT_SUPPORTED = 'Attribute not supported, skiped'\n/* End: src/v2/_variables.js */\n// Trocha class\n/* Begin: src/v2/_Trocha.js */\n// Route classes\n/* Begin: src/v2/_Route.js */\n/**\n * The Class where all other route types inherit\n * @module Route\n * @exports Route\n * @class\n */\nclass Route {\n\t/**\n\t * Holds all the route information, note it's not protected(can't be inhered)\n\t * @private\n\t */\n\t#data = {\n\t\tparent: null,\n\t\tchilds: {},\n\t\tSS: DS, // selectedSelector\n\t\t// next attributes just for root\n\t\talwaysPost: false,\n\t\talwaysUrl: false,\n\t\tidMode: COLON,\n\t\tdomain: '',\n\t\tpost: '',\n\t\tpre: '',\n\t\tseparator: _AVAILABLE_SEPARATORS[SLASH][SEPARATOR],\n\t\tfirstSeparator: _AVAILABLE_SEPARATORS[SLASH][FIRST_SEPARATOR]\n\t}\n\n\t/**\n\t * @param {Route} mySelf - tldr this\n\t * @param {string} id - id to compare to parents ids\n\t * @pure\n\t * @private\n\t * @recursive\n\t * @return {boolean} - does the parent or (parent parent and go on) have the id?\n\t */\n\t#anyParentHasThisId = (mySelf, id) => {\n\t\tlet SS = mySelf.#data.SS\n\t\tif (!mySelf.#data.parent) return false\n\t\treturn (\n\t\t\tmySelf.#data.parent[SS + ID] === id ||\n\t\t\tmySelf.#anyParentHasThisId(mySelf.#data.parent, id)\n\t\t)\n\t}\n\n\t/**\n\t * Adds a (custom)getter of attribute to mySelf\n\t * @param {Route} mySelf - tldr this\n\t * @param {string} attribute - name of the attribute to expose\n\t * @param {function} fun - to use as a custom getter for attribute\n\t * @param {boolean} skipSelector - if false will add selectedSelector to getter name\n\t * @sideEffect mySelf\n\t * @private\n\t */\n\t#newGetter = (mySelf, attribute, fun, skipSelector) => {\n\t\tlet SS = skipSelector ? '' : mySelf.#data.SS\n\t\tObject.defineProperty(mySelf, SS + attribute, {\n\t\t\tget() {\n\t\t\t\tif (fun) return fun()\n\t\t\t\telse return mySelf.#data[attribute]\n\t\t\t},\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false\n\t\t})\n\t}\n\n\t/**\n\t * Constructor helper, set attributes and getters of current route\n\t * @param {Route} mySelf - tldr this\n\t * @param {string} attribute - name\n\t * @sideEffect mySelf - add getters, modify #data; posibleRouteDef - delete all attributes\n\t * @private\n\t */\n\t#defineMyAttributes = (mySelf, posibleRouteDef) => {\n\t\tlet SS = mySelf.#data.SS\n\n\t\t/**\n\t\t * @param {string} attribute - name of the attribute to add to #data then remove of mySelf\n\t\t * @pure false - depends on mySelf\n\t\t * @sideEffect mySelf\n\t\t */\n\t\tlet _setAndDisposeAttribute = attribute => {\n\t\t\tmySelf.#data[attribute] = posibleRouteDef[SS + attribute]\n\t\t\tdelete posibleRouteDef[SS + attribute]\n\t\t}\n\n\t\t_setAndDisposeAttribute(NAME)\n\t\t_setAndDisposeAttribute(ID)\n\t\t_setAndDisposeAttribute(DEFAULT_ID)\n\t\t_setAndDisposeAttribute(TYPE)\n\t\t_setAndDisposeAttribute(METHOD)\n\n\t\t_setAndDisposeAttribute(ALIAS)\n\t\t_setAndDisposeAttribute(RESOURCE)\n\n\t\t_setAndDisposeAttribute(HIDE)\n\t\t_setAndDisposeAttribute(POSTFIX)\n\t\t_setAndDisposeAttribute(JUST_ID)\n\t\t_setAndDisposeAttribute(PARENT_ID)\n\t\tif (false === posibleRouteDef[mySelf.#data.parent[SS + ID]])\n\t\t\t_setAndDisposeAttribute(mySelf.#data.parent[SS + ID])\n\t\tmySelf.#newGetter(mySelf, NAME)\n\t\tmySelf.#newGetter(mySelf, ID) // @TODO DOCUMENT ME\n\t\tmySelf.#newGetter(mySelf, METHOD)\n\t\tmySelf.#newGetter(mySelf, AS, () => mySelf.#as(mySelf))\n\t}\n\n\t/**\n\t * Constructor helper, create one child route\n\t * @param {Route} mySelf - tldr this\n\t * @param {object} routeDefinition - child route attributes\n\t * @param {string} name - route name\n\t * @sideEffect mySelf - add getters, modify #data; routeDefinition add $name\n\t * @private\n\t * @throws ERROR_ROUTE_ALREADY_DEFINE\n\t */\n\t#createChildRoute = (mySelf, routeDefinition, name) => {\n\t\tlet SS = mySelf.#data.SS\n\t\tif (mySelf.#data.childs[name])\n\t\t\t_throwError(mySelf, ERROR_ROUTE_ALREADY_DEFINE, name)\n\t\tlet routeSubclasses = [Route, Alias, Resource, Scope]\n\t\trouteSubclasses.forEach(routeSubclass => {\n\t\t\tif (routeSubclass.is(routeDefinition, SS))\n\t\t\t\trouteDefinition = routeSubclass.diggest(routeDefinition, SS, SS)\n\t\t})\n\t\trouteDefinition[SS + NAME] = name\n\t\tlet routeTypes = {}\n\t\trouteTypes[ROUTE] = Route\n\t\trouteTypes[undefined] = Route\n\t\trouteTypes[_ALIAS] = Alias\n\t\trouteTypes[SCOPE] = Scope\n\t\trouteTypes[_RESOURCE] = Resource\n\n\t\tlet newRoute = new routeTypes[routeDefinition[SS + TYPE]](\n\t\t\tmySelf,\n\t\t\trouteDefinition,\n\t\t\tSS,\n\t\t\tmySelf.#data.root\n\t\t)\n\t\tmySelf.#data.childs[name] = newRoute\n\t\tmySelf.#newGetter(mySelf, name, () => mySelf.#data.childs[name], true)\n\t}\n\n\t/**\n\t * Constructor helper, create child routes\n\t * @param {Route} mySelf - tldr this\n\t * @param {object} argChildRoutes - child routeDefinitions\n\t * @param {boolean} skipResource - prevent infinity loop on resource creation\n\t * @sideEffect mySelf - add getters, modify #data\n\t * @private\n\t * @recursive\n\t */\n\t#diggestChildRoutes = (mySelf, argChildRoutes, skipResource) => {\n\t\tlet SS = mySelf.#data.SS\n\t\tif (!skipResource && mySelf.#data[TYPE] === _RESOURCE) {\n\t\t\tlet resourceChilds = mySelf.#data[RESOURCE]\n\t\t\tdelete resourceChilds[SS + ID]\n\t\t\tmySelf.#diggestChildRoutes(mySelf, resourceChilds, true)\n\t\t}\n\n\t\tlet posibleChildRoutesNames = Object.keys(argChildRoutes)\n\t\twhile (posibleChildRoutesNames.length) {\n\t\t\tlet posibleChild = posibleChildRoutesNames.pop()\n\t\t\tif (\n\t\t\t\t// This case disable any <id>=false\n\t\t\t\targChildRoutes[posibleChild] === false &&\n\t\t\t\tmySelf.#anyParentHasThisId(mySelf, posibleChild)\n\t\t\t)\n\t\t\t\tmySelf.#data[posibleChild] = false\n\t\t\telse {\n\t\t\t\tmySelf.#createChildRoute(\n\t\t\t\t\tmySelf,\n\t\t\t\t\targChildRoutes[posibleChild],\n\t\t\t\t\tposibleChild\n\t\t\t\t)\n\t\t\t\tif (mySelf.#data[TYPE] === SCOPE) {\n\t\t\t\t\tlet scopedChild = { ...argChildRoutes[posibleChild] }\n\t\t\t\t\tscopedChild[SS + PARENT_ID] = false\n\t\t\t\t\tmySelf.#createChildRoute(\n\t\t\t\t\t\tmySelf.#data.parent,\n\t\t\t\t\t\tscopedChild,\n\t\t\t\t\t\tposibleChild\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * getter function of $as\n\t * @param {Route} mySelf - tldr this\n\t * @recursive via parent.$as\n\t * @return {string} flat self and parents name separated by _\n\t */\n\t#as = mySelf => {\n\t\tlet SS = mySelf.#data.SS\n\t\treturn mySelf.#data.parent[SS + AS]\n\t\t\t? `${mySelf.#data.parent[SS + AS]}_${mySelf.#data[NAME]}`\n\t\t\t: mySelf.#data[NAME]\n\t}\n\n\t/**\n\t * This constructor should be used just for test'n debug purposes\n\t * pure false depends on #data initial attributes\n\t * @param {Route} myParent\n\t * @param {routeParamsDefinition} argRouteDef\n\t * @param {string} argCustomSelector\n\t * @param {Route} argRoot\n\t * @param {object} [argChildRoutes={}]\n\t * @param {string} [argDomain]\n\t * @param {boolean} [argAlwaysUrl]\n\t * @param {string} [argPre]\n\t * @param {string} [argPost]\n\t * @param {boolean} [argAlwaysPost]\n\t * @param {Trocha.COLON | Trocha.BRACKETS} [argIdMod=Trocha.COLON]\n\t * @param {Trocha.SLASH | Trocha.BACK_SLASH | Trocha.DOT} [argSeparator=Trocha.SLASH]\n\t * @param {boolean} [argfirstSeparator=true]\n\t */\n\tconstructor(\n\t\tmyParent,\n\t\targRouteDef,\n\t\targCustomSelector,\n\t\targRoot,\n\t\t// Arguments for root Route\n\t\targChildRoutes = {},\n\t\targDomain,\n\t\targAlwaysUrl,\n\t\targPre,\n\t\targPost,\n\t\targAlwaysPost,\n\t\t//argAlwaysPre,// @TODO\n\t\targIdMode,\n\t\targSeparator,\n\t\targfirstSeparator\n\t) {\n\t\tlet SS = (this.#data.SS = argCustomSelector || DS) // selectedSelector\n\t\tif (\n\t\t\tmyParent ||\n\t\t\t(argRouteDef && argRouteDef[SS + NAME] && argRouteDef[SS + TYPE])\n\t\t) {\n\t\t\t// It's a normal route\n\t\t\tthis.#data.parent = myParent\n\t\t\tthis.#data.root = argRoot\n\t\t\tthis.#defineMyAttributes(this, argRouteDef)\n\t\t\tthis.#diggestChildRoutes(this, argRouteDef)\n\t\t} else {\n\t\t\t// It's the root route\n\t\t\tconst _setRootAttribute = (attribute, value) =>\n\t\t\t\t(this.#data[attribute] = value !== undefined ? value : this.#data[attribute])\n\t\t\t_setRootAttribute(DOMAIN, argDomain)\n\t\t\tthis.#newGetter(this, DOMAIN)\n\t\t\t_setRootAttribute(ALWAYS_URL, argAlwaysUrl)\n\t\t\t_setRootAttribute(ALWAYS_POST, argAlwaysPost)\n\t\t\t_setRootAttribute(POSTFIX, argPost)\n\t\t\t_setRootAttribute(PREFIX, argPre)\n\t\t\t_setRootAttribute(ID_MODE, argIdMode)\n\n\t\t\t_setRootAttribute(SEPARATOR, _AVAILABLE_SEPARATORS[argSeparator][SEPARATOR])\n\t\t\t_setRootAttribute(\n\t\t\t\tFIRST_SEPARATOR,\n\t\t\t\targfirstSeparator !==  undefined ? argfirstSeparator : _AVAILABLE_SEPARATORS[argSeparator][FIRST_SEPARATOR]\n\t\t\t)\n\t\t\t_setRootAttribute(_PREID, this.#data[SEPARATOR] + _ID_MODE_REPLACE)\n\n\t\t\tthis.#data.root = this.#data\n\t\t\tdelete this[PATH]\n\t\t\tthis.#newGetter(this, _RESOURCE, () => _basicResource(SS))\n\t\t\tthis.#diggestChildRoutes(this, argChildRoutes)\n\t\t}\n\t}\n\n\t_newRoute = args => {\n\t\targs[TYPE] = ROUTE\n\t\tif (!Route.is(args, '')) return false\n\t\tthis.#createChildRoute(\n\t\t\tthis,\n\t\t\tRoute.diggest(args, this.#data.SS, ''),\n\t\t\targs[NAME]\n\t\t)\n\t}\n\t_newScope = args => {\n\t\targs[TYPE] = SCOPE\n\t\tif (!Scope.is(args, '')) return false\n\t\tthis.#createChildRoute(\n\t\t\tthis,\n\t\t\tScope.diggest(args, this.#data.SS, ''),\n\t\t\targs[NAME]\n\t\t)\n\t}\n\t_newAlias = args => {\n\t\targs[TYPE] = _ALIAS\n\t\tif (!Alias.is(args, '')) return false\n\t\tthis.#createChildRoute(\n\t\t\tthis,\n\t\t\tAlias.diggest(args, this.#data.SS, ''),\n\t\t\targs[NAME]\n\t\t)\n\t}\n\t_newResource = args => {\n\t\targs[TYPE] = _RESOURCE\n\t\tif (!Resource.is(args, '')) return false\n\t\tthis.#createChildRoute(\n\t\t\tthis,\n\t\t\tResource.diggest(args, this.#data.SS, ''),\n\t\t\targs[NAME]\n\t\t)\n\t}\n\n\t// prettier-ignore // < Does not work ¬¬\n/* Begin: src/v2/_Route_path.js */\n\tpath(routeParams = {}, customNameFun) {\n\t\tconst\n\t\t\tmyData = this.#data,\n\t\t\tparent = myData.parent || {},\n\t\t\trootData = myData.root,\n\t\t\tSS = myData.SS,\n\t\t\tisFirtsParent = !!parent[SS+DOMAIN],\n\t\t\t_formatID = _FORMAT_ID_FUN(rootData[ID_MODE])\n\t\tlet r = s\n\n\t\tif (myData[NAME] === undefined) return ''\n\n\t\t// 1 print the domain\n\t\tr =\n\t\t\trootData[DOMAIN] &&\n\t\t\tisFirtsParent &&\n\t\t\trouteParams[URL] !== false &&\n\t\t\t(routeParams[URL] || rootData[ALWAYS_URL])\n\t\t\t\t? rootData[DOMAIN]\n\t\t\t\t: s\n\t\tdelete routeParams[URL]\n\n\t\t// 2 add the prefix\n\t\tr +=\n\t\t\trootData[PREFIX] && (routeParams[PREFIX] || routeParams[EXTENDED])\n\t\t\t\t? rootData[PREFIX]\n\t\t\t\t: s\n\t\tdelete routeParams[PREFIX]\n\n\t\t// 3 print parent paths\n\t\tlet parentPathArg = {}\n\t\tlet parentPathResponse = parent[PATH](parentPathArg, () => true)\n\t\tlet thisIsChildPath = !! parentPathResponse\n\t\t// 3.1 enable firstSeparator\n\t\tlet _ = (thisIsChildPath || rootData[FIRST_SEPARATOR]) ? rootData[SEPARATOR] : s\n\t\tparentPathArg[POSTFIX] = false\n\t\tr += parentPathResponse\n\n\t\t// 4.A print name & id(name) from customNameFun like Alias\n\t\tlet hide =\n\t\t\trouteParams[HIDE] !== undefined\n\t\t\t\t? routeParams[HIDE]\n\t\t\t\t: myData[HIDE] || (myData[JUST_ID] && myData[DEFAULT_ID] === false)\n\t\tlet customNameFromInhered\n\t\tif ('function' === typeof customNameFun)\n\t\t\tcustomNameFromInhered = customNameFun(myData, _)\n\t\tif ('string' === typeof customNameFromInhered) r += customNameFromInhered\n\t\telse {\n\t\t\t// 4.B print default name & id(name)\n\t\t\tlet myId = _formatID(myData[ID])\n\t\t\tif (\n\t\t\t\t// 4.B.1 justId case\n\t\t\t\trouteParams[JUST_ID] !== false &&\n\t\t\t\t(myData[JUST_ID] && myData[ID] && myData[myData[ID]] !== false)\n\t\t\t) {\n\t\t\t\tr += _ + myId\n\t\t\t} else {\n\t\t\t\t// 4.B.2 hide case\n\t\t\t\tlet noIdentifier = myData[ID] ? routeParams[ID] === false : true\n\t\t\t\tr += hide ? s : _ + myData[NAME]\n\t\t\t\tr += noIdentifier ? s : rootData[SEPARATOR] + myId\n\t\t\t}\n\t\t}\n\n\t\t// 5 add the postfix\n\t\t/**\n\t\t * @TODO Document hide also remove postfix\n\t\t */\n\t\tr +=\n\t\t\trootData[POSTFIX] &&\n\t\t\t!hide &&\n\t\t\trouteParams[POSTFIX] !== false &&\n\t\t\t(rootData[ALWAYS_POST] ||\n\t\t\t\tmyData[POSTFIX] ||\n\t\t\t\trouteParams[POSTFIX] ||\n\t\t\t\trouteParams[EXTENDED])\n\t\t\t\t? rootData[POSTFIX]\n\t\t\t\t: s\n\t\tdelete routeParams[POSTFIX]\n\n\t\t// Note next 2 step first clear the routeParams then later on print the colected data\n\t\t// 7-1 get query part(also know as search... the ?asd=1 part)\n\t\tlet query = {}\n\t\tif (routeParams[QUERY]) {\n\t\t\tquery = JSON.parse(JSON.stringify(routeParams[QUERY]))\n\t\t\tdelete routeParams[QUERY]\n\t\t}\n\n\t\t// 8-1 get fragment part(also know as anchor... the #asd part)\n\t\tlet fragment = s\n\t\tif (routeParams[FRAGMENT]) {\n\t\t\tfragment = routeParams[FRAGMENT]\n\t\t\tdelete routeParams[FRAGMENT]\n\t\t}\n\n\t\t// 6 Replace Or Remove(RoR) Ids\n\n\t\t// 6.1 RoR parentId\n\t\tif (\n\t\t\tparent[SS + ID] &&\n\t\t\t!routeParams[parent[SS + ID]] &&\n\t\t\t(myData[ID] === false ||\n\t\t\t\trouteParams[PARENT_ID] === false ||\n\t\t\t\tmyData[PARENT_ID] === false)\n\t\t)\n\t\t\tr = r.replace(_formatID(parent[SS + ID], rootData[_PREID]), s)\n\n\t\t// 6.2 Remove parents Ids designed in constructor\n\t\tObject.keys(myData).forEach(idName => {\n\t\t\tif (myData[idName] === false && !routeParams[idName])\n\t\t\t\treturn (r = r.replace(_formatID(idName, rootData[_PREID]), s))\n\t\t})\n\n\t\t// 6.2 RoR selected Ids in path params\n\t\tObject.keys(routeParams).forEach(idName => {\n\t\t\tif (routeParams[idName] === false)\n\t\t\t\t// Remove\n\t\t\t\tr = r.replace(_formatID(idName, rootData[_PREID]), s)\n\t\t\t// Replace\n\t\t\telse r = r.replace(_formatID(idName), routeParams[idName])\n\t\t})\n\n\t\t// 7 Now add the query\n\t\tObject.keys(query).forEach(function(key, i, array) {\n\t\t\tif (i === 0) r += '?'\n\t\t\tif (Array.isArray(query[key]))\n\t\t\t\tquery[key].forEach(\n\t\t\t\t\t(value, _i) =>\n\t\t\t\t\t\t(r +=\n\t\t\t\t\t\t\tencodeURIComponent(key) +\n\t\t\t\t\t\t\t'[]=' +\n\t\t\t\t\t\t\tencodeURIComponent(value) +\n\t\t\t\t\t\t\t(query[key].length - 1 !== _i || array.length - 1 !== i ? '&' : ''))\n\t\t\t\t)\n\t\t\telse\n\t\t\t\tr +=\n\t\t\t\t\tencodeURIComponent(key) +\n\t\t\t\t\t'=' +\n\t\t\t\t\tencodeURIComponent(query[key]) +\n\t\t\t\t\t(array.length - 1 !== i ? '&' : '')\n\t\t})\n\n\t\t// 8 Now add the fragment\n\t\tif (fragment) r += '#' + encodeURIComponent(fragment)\n\n\t\treturn r\n\t}\n/* End: src/v2/_Route_path.js */\n\n\ttoString = () => this.#as(this)\n\n\tstatic DEFAULT_METHOD = GET\n\n\t/**\n\t * Check if given routeDefinition is Route\n\t * @param {object} routeDefinition -\n\t * @param {string} SS - selectedSelector normally $\n\t * @static\n\t * @pure\n\t * @return {boolean} routeDefinition is route?\n\t */\n\tstatic is(routeDefinition, SS) {\n\t\treturn (\n\t\t\trouteDefinition[SS + TYPE] === ROUTE ||\n\t\t\t('object' === typeof routeDefinition &&\n\t\t\t\trouteDefinition[SS + TYPE] === undefined)\n\t\t)\n\t}\n\n\t/**\n\t * This function serve 2 purposes:\n\t * (With just first 3 params) Sanitize routeDefinition for ROUTE valid params (this behabior is override)\n\t * (With full params) add <routeDefinition>.<IS><attributes> to <dest>.<SS><attributes> (this behabior is not inhered)\n\t * @tobe_overload\n\t * @param {object} routeDefinition -\n\t * @param {string} SS - selector to be return\n\t * @param {string} IS - selector to be find\n\t * @param {object} dest - another routeDefinition\n\t * @param {array<string>} attributes - to be added from routeDefinition to dest\n\t * @sideEffect dest\n\t */\n\tstatic diggest = (routeDefinition, SS, IS, dest, attributes) => {\n\t\tif (dest && attributes)\n\t\t\t// is used from subroutes\n\t\t\tattributes.forEach(attribute => {\n\t\t\t\tdest[SS + attribute] = routeDefinition[IS + attribute]\n\t\t\t})\n\t\telse {\n\t\t\tlet r = {}\n\t\t\tr[SS + TYPE] = ROUTE\n\t\t\tr[SS + METHOD] = routeDefinition[IS + METHOD] || Route.DEFAULT_METHOD\n\t\t\tRoute.diggest(routeDefinition, SS, IS, r, [\n\t\t\t\tID,\n\t\t\t\tHIDE,\n\t\t\t\tJUST_ID,\n\t\t\t\tPOSTFIX,\n\t\t\t\tPARENT_ID\n\t\t\t])\n\t\t\tRoute._trimSelector(IS, routeDefinition, r)\n\t\t\treturn r\n\t\t}\n\t}\n\n\t/**\n\t * Add the routes defined (those without the current selector) to the\n\t * diggested routeDefinition(dest), note this only works with a selectorl else maybe\n\t * it's from function creation route like _newScope\n\t * @static\n\t * @pure false\n\t * @side_effect dest\n\t * @param {string} SS selectedSelector\n\t * @param {object} src routeDefinition in\n\t * @param {object} dest routeDefinition out\n\t */\n\tstatic _trimSelector = (IS, src, dest) => {\n\t\tif (IS === '') return\n\t\tObject.keys(src).forEach(attribute => {\n\t\t\tif (attribute.slice(0, 2) !== IS) dest[attribute] = src[attribute]\n\t\t\telse _throwWarning(this, WARNING_ROUTE_ATTRIBUTE_NOT_SUPPORTED, attribute)\n\t\t})\n\t}\n}\n/* End: src/v2/_Route.js */\n/* Begin: src/v2/_Alias.js */\nclass Alias extends Route {\n\tconstructor(...args) {\n\t\tsuper(...args)\n\t}\n\n\t/**\n\t * Sanitize routeDefinition for ALIAS valid params\n\t * @static\n\t * @overload Route.diggest\n\t * @param {object} routeDefinition\n\t * @param {string} SS - selector to be return\n\t * @param {string} IS - selector to be find\n\t * @return {object} sanitized copy of routeDefinition\n\t */\n\tstatic diggest(routeDefinition, SS, IS) {\n\t\tlet r = {}\n\t\tr[SS + TYPE] = _ALIAS\n\t\tr[SS + ALIAS] = routeDefinition[IS + ALIAS] || routeDefinition\n\t\tr[SS + METHOD] = routeDefinition[IS + METHOD] || Route.DEFAULT_METHOD\n\t\tRoute.diggest(routeDefinition, SS, IS, r, [ID, POSTFIX, PARENT_ID])\n\t\tif ('string' !== typeof routeDefinition)\n\t\t\tRoute._trimSelector(IS, routeDefinition, r)\n\t\treturn r\n\t}\n\n\t/**\n\t * Check if given routeDefinition is ALIAS\n\t * @see Route.is\n\t * @pure\n\t * @static\n\t * @override\n\t * @return {boolean} routeDefinition is alias?\n\t */\n\tstatic is(routeDefinition, SS) {\n\t\treturn (\n\t\t\t'string' === typeof routeDefinition ||\n\t\t\t(routeDefinition[SS + TYPE] === _ALIAS && routeDefinition[SS + ALIAS])\n\t\t)\n\t}\n\n\t/**\n\t * Print ALIAS type routes\n\t * diferences with Route.path: use alias instead of name and if it's base will not start with /\n\t * @see Route.path\n\t * @overload Route.path\n\t */\n\tpath(routeParams = {}) {\n\t\treturn super.path(routeParams, function(myData, _) {\n\t\t\t// Note Alias dnt support hide nor justId in creation\n\t\t\tconst parent = myData.parent || {}\n\t\t\tconst rootData = myData.root\n\t\t\tconst _formatID = _FORMAT_ID_FUN(rootData[ID_MODE])\n\t\t\tconst myId = _formatID(myData[ID], rootData[_PREID])\n\t\t\tlet r = s\n\n\t\t\tif (myData[ID] && routeParams[JUST_ID]) {\n\t\t\t\tr += myId\n\t\t\t} else {\n\t\t\t\tlet useID = !!myData[ID] && routeParams[myData[ID]] !== false\n\t\t\t\tr += parent.constructor.name === 'Trocha' ? s : _\n\t\t\t\tr += routeParams[HIDE] ? s : myData[ALIAS]\n\t\t\t\tr += useID ? myId : s\n\t\t\t}\n\t\t\treturn r\n\t\t})\n\t}\n}\n/* End: src/v2/_Alias.js */\n/* Begin: src/v2/_Resource.js */\nclass Resource extends Route {\n\tconstructor(...args) {\n\t\tsuper(...args)\n\t}\n\n\t/**\n\t * @override\n\t */\n\tstatic diggest(routeDefinition, SS, IS) {\n\t\tlet r = {}\n\t\tr[SS + TYPE] = _RESOURCE\n\t\tr[SS + RESOURCE] = routeDefinition[IS + RESOURCE] || _basicResource(SS)\n\t\tRoute.diggest(routeDefinition, SS, IS, r, [ID])\n\t\tRoute._trimSelector(IS, routeDefinition, r)\n\t\treturn r\n\t}\n\n\t/**\n\t * @override\n\t */\n\tstatic is(routeDefinition, SS) {\n\t\treturn (\n\t\t\trouteDefinition[SS + TYPE] === _RESOURCE && routeDefinition[SS + ID] // &&\n\t\t\t// routeDefinition[SS+RESOURCE]\n\t\t)\n\t}\n\n\t/**\n\t * @override\n\t */\n\tpath(routeParams = {}, force) {\n\t\treturn super.path(routeParams, function(myData, _) {\n\t\t\tif ('function' === typeof force && force() !== true)\n\t\t\t\t_throwWarning(undefined, WARNING_RESOURCE_AS_A_ROUTE)\n\t\t\treturn false\n\t\t})\n\t}\n}\n/* End: src/v2/_Resource.js */\n/* Begin: src/v2/_Scope.js */\nclass Scope extends Route {\n\tconstructor(...args) {\n\t\tsuper(...args)\n\t}\n\n\t/**\n\t * @override\n\t */\n\tstatic diggest(routeDefinition, SS, IS) {\n\t\tlet r = {}\n\t\tr[SS + TYPE] = SCOPE\n\t\tr[SS + JUST_ID] = true\n\t\tr[SS + DEFAULT_ID] = routeDefinition[IS + DEFAULT_ID] || false\n\t\tRoute.diggest(routeDefinition, SS, IS, r, [ID, HIDE])\n\t\tRoute._trimSelector(IS, routeDefinition, r)\n\t\treturn r\n\t}\n\n\t/**\n\t * @override\n\t */\n\tstatic is(routeDefinition, SS) {\n\t\treturn (\n\t\t\t'object' === typeof routeDefinition &&\n\t\t\trouteDefinition[SS + TYPE] === SCOPE &&\n\t\t\trouteDefinition[SS + ID] // Should scope always have id????\n\t\t)\n\t}\n\n\t/**\n\t * @override\n\t */\n\tpath(routeParams = {}, force) {\n\t\treturn super.path(routeParams, function(myData, _) {\n\t\t\tif ('function' === typeof force && force() !== true)\n\t\t\t\t_throwError(undefined, ERROR_SCOPE_AS_A_ROUTE)\n\t\t\treturn false\n\t\t})\n\t}\n}\n/* End: src/v2/_Scope.js */\n\n/**\n * The main Class of the trocha library\n * @see https://dfoxpro.github.io/trochaJS/#101-intro-to-trocha-js\n * @module Trocha\n * @exports default, Trocha\n * @class\n */\nclass Trocha extends Route {\n\t/**\n\t * @constr0uctor\n\t * @see https://dfoxpro.github.io/trochaJS/#203-route-definition-parameters\n\t * @param {object} [arg]\n\t * @param {routeParamsDefinition} [arg.routes]\n\t * @param {routeParamsDefinition} arg.routes.<children_route>\n\t * @param {Trocha.ROUTE | Trocha.SCOPE | Trocha.RESOURCE | Trocha.ALIAS} [arg.routes.$type=Trocha.ROUTE]\n\t * @param {Trocha.COLON | Trocha.BRACKETS} [arg.idMode=Trocha.COLON]\n\t * @param {Trocha.SLASH | Trocha.BACK_SLASH | Trocha.DOT} [arg.separator=Trocha.SLASH]\n\t * @param {String} arg.routes.$alias\n\t * @param {String} arg.routes.$id\n\t * @param {string} [arg.customSelector=$]\n\t * @param {string} [arg.domain]\n\t * @param {string} [arg.pre]\n\t * @param {string} [arg.post]\n\t * @param {boolean} [firstSeparator=true]\n\t * @param {boolean} [arg.alwaysUrl=false]\n\t * @param {boolean} [arg.alwaysPost=false]\n\t */\n\tconstructor(args = {}) {\n\t\tsuper(\n\t\t\tnull,\n\t\t\tnull, //Because it's the root\n\t\t\targs[CUSTOM_SELECTOR],\n\t\t\tnull,\n\t\t\targs[ROUTES],\n\t\t\targs[DOMAIN],\n\t\t\targs[ALWAYS_URL],\n\t\t\targs[PREFIX],\n\t\t\targs[POSTFIX],\n\t\t\targs[ALWAYS_POST],\n\t\t\t//args[ALWAYSPRE],/**@TODO\n\t\t\targs[ID_MODE],\n\t\t\targs[SEPARATOR],\n\t\t\targs[FIRST_SEPARATOR]\n\t\t)\n\t}\n\n\t//// STATIC AVAILABLE ATTRIBUTES\n\t/// Offers all the route types\n\t/**\n\t * Default route type\n\t * Symbol for Route type... route\n\t * @see https://dfoxpro.github.io/trochaJS/#route\n\t * @public\n\t * @static\n\t */\n\tstatic get ROUTE() {\n\t\treturn ROUTE\n\t}\n\t/**\n\t * Route type optional to tree definition\n\t * Symbol for Scope type route\n\t * @see https://dfoxpro.github.io/trochaJS/#scope\n\t * @public\n\t * @static\n\t */\n\tstatic get SCOPE() {\n\t\treturn SCOPE\n\t}\n\t/**\n\t * Route type that contain a CRUD like tree route definition\n\t * Symbol for Resource type route\n\t * @see https://dfoxpro.github.io/trochaJS/#resource\n\t * @public\n\t * @static\n\t */\n\tstatic get RESOURCE() {\n\t\treturn _RESOURCE\n\t}\n\t/**\n\t * Route type that can be used to abbreviate long name routes, like CDN\n\t * Symbol for Alias type route\n\t * @see https://dfoxpro.github.io/trochaJS/#alias\n\t * @public\n\t * @static\n\t */\n\tstatic get ALIAS() {\n\t\treturn _ALIAS\n\t}\n\n\t/// Offers all the request types\n\t/**\n\t * HTTP request method\n\t * Used by browsers to ask CORS permissions\n\t * @public\n\t * @static\n\t */\n\tstatic get OPTIONS() {\n\t\treturn OPTIONS\n\t}\n\t/**\n\t * Most common HTTP request method\n\t * It's tue default method for all routes\n\t * Used in REST for Read operations\n\t * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods for all methods info\n\t * @public\n\t * @static\n\t */\n\tstatic get GET() {\n\t\treturn GET\n\t}\n\t/**\n\t * HTTP request method\n\t * Same as get without body response\n\t * @public\n\t * @static\n\t */\n\tstatic get HEAD() {\n\t\treturn HEAD\n\t}\n\t/**\n\t * HTTP request method\n\t * Used in REST for Create operations\n\t * @public\n\t * @static\n\t */\n\tstatic get POST() {\n\t\treturn POST\n\t}\n\t/**\n\t * HTTP request method\n\t * Used in REST for Create operations\n\t * @public\n\t * @static\n\t */\n\tstatic get PUT() {\n\t\treturn PUT\n\t}\n\t/**\n\t * HTTP request method\n\t * Used in REST for Update/Write operations\n\t * @public\n\t * @static\n\t */\n\tstatic get PATCH() {\n\t\treturn PATCH\n\t}\n\t/**\n\t * HTTP request method\n\t * Used in REST for Destroy/Remove operations\n\t * @public\n\t * @static\n\t */\n\tstatic get DELETE() {\n\t\treturn DELETE\n\t}\n\t/**\n\t * HTTP request method\n\t * Used for usage/error log client to server\n\t * @public\n\t * @static\n\t */\n\tstatic get TRACE() {\n\t\treturn TRACE\n\t}\n\t/**\n\t * HTTP request method\n\t * @public\n\t * @static\n\t */\n\tstatic get CONNECT() {\n\t\treturn CONNECT\n\t}\n\n\t/// Offers ID modes\n\t/**\n\t * Standard definition of Id; used in Angular, React(Router)\n\t * Symbol for \"/:the_id\" id mode, default ID mode\n\t * @public\n\t * @static\n\t */\n\tstatic get COLON() {\n\t\treturn COLON\n\t}\n\t/**\n\t * Definition of Id used in CanJS and other frameworks\n\t * Symbol for \"/{the_id}\" id mode\n\t * @public\n\t * @static\n\t */\n\tstatic get BRACKETS() {\n\t\treturn BRACKETS\n\t}\n\n\t/*\n\t * Offers basic resource structure\n\t * @See Route constructor for custom selector\n\t */\n\tstatic get $RESOURCE() {\n\t\treturn _basicResource()\n\t}\n\n\t/**\n\t * Standard definition of separator; used in Unix, http\n\t * Symbol for \"/\" separator, default separator\n\t * @public\n\t * @static\n\t */\n\tstatic get SLASH() {\n\t\treturn SLASH\n\t}\n\t/**\n\t * Used in MS Windows file system\n\t * Symbol for \"\\\" separator\n\t * @public\n\t * @static\n\t */\n\tstatic get BACK_SLASH() {\n\t\treturn BACK_SLASH\n\t}\n\t/**\n\t * Used in localization libraries and other properties enviorements\n\t * Symbol for \".\" separator\n\t * @public\n\t * @static\n\t */\n\tstatic get DOT() {\n\t\treturn DOT\n\t}\n}\n/* End: src/v2/_Trocha.js */\n/* End: src/v2/_core.js */\nexport {\n\tTrocha,\n\tRoute,\n\tAlias,\n\tResource,\n\tScope,\n\t// Request method types\n\tOPTIONS,\n\tGET,\n\tHEAD,\n\tPOST,\n\tPUT,\n\tPATCH,\n\tDELETE,\n\tTRACE,\n\tCONNECT,\n\t// Route types\n\tROUTE,\n\tSCOPE,\n\t_RESOURCE as RESOURCE,\n\t_ALIAS as ALIAS,\n\t// Resource fun\n\t_basicResource as $RESOURCE\n}\n"],"file":"trocha_module.babeled.js"}